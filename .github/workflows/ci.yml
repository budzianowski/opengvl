name: CI

on:
  push:
    branches: [ main, master, develop, dev, '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-format:
    name: Format & Test (Python 3.11)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Cache virtualenv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Sync dependencies (create venv if cache miss)
        run: make install

      - name: Show dependency summary
        run: |
          . .venv/bin/activate
          python -V
          pip list | grep -E 'black|ruff|pytest|isort' || true

      - name: Check formatting is clean (make format + diff check)
        run: |
          make format
          echo 'Checking for uncommitted changes after formatting...'
          if ! git diff --quiet; then
            echo 'ERROR: Formatting changes detected. Run `make format` locally and commit the results.'
            git --no-pager diff --name-only
            exit 1
          fi

      - name: Run tests
        run: make test

      - name: Upload pytest results on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failed-test-artifacts
          path: |
            ./.pytest_cache
            ./htmlcov
          if-no-files-found: ignore

      - name: Summary
        if: always()
        run: |
          echo 'CI pipeline completed.'
          echo 'Format + tests status:'
          echo "Result: ${{ job.status }}"
